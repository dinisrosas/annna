{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/dinis/Desktop/dev/annna/components/ThemeToggle.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { darkTheme, IconButton, Tooltip } from '@modulz/design-system';\nimport { useTheme } from 'next-themes';\nimport { SunIcon } from '@radix-ui/react-icons';\nexport const ThemeToggle = props => {\n  const {\n    theme,\n    setTheme\n  } = useTheme();\n  return /*#__PURE__*/_jsxDEV(Tooltip, {\n    content: \"Toggle theme\",\n    side: \"bottom\",\n    align: \"end\",\n    children: /*#__PURE__*/_jsxDEV(IconButton, _objectSpread(_objectSpread({\n      variant: \"ghost\",\n      onClick: () => {\n        const newTheme = theme === 'dark' ? 'light' : 'dark'; // When switching themes, you might see demo iframes lagging behind the primitives homepage for a few frames.\n        // This is because `setTheme` hook depends on React component lifecycle to update things. We are toggling\n        // styles manually so that the iframes and the parent page theme change is perfectly synced.\n\n        document.querySelectorAll('[data-demo-iframe]').forEach(iframe => {\n          var _iframe$contentDocume;\n\n          if ((_iframe$contentDocume = iframe.contentDocument) !== null && _iframe$contentDocume !== void 0 && _iframe$contentDocume.documentElement) {\n            iframe.contentDocument.documentElement.classList.toggle(darkTheme.className);\n            iframe.contentDocument.documentElement.classList.toggle('light-theme');\n            iframe.contentDocument.documentElement.style.setProperty('color-scheme', newTheme);\n          }\n        });\n        document.documentElement.classList.toggle(darkTheme.className);\n        document.documentElement.classList.toggle('light-theme');\n        document.documentElement.style.setProperty('color-scheme', newTheme); // Finally, we still need to let `next-themes` know of the theme change so that it saves it to local storage.\n\n        setTheme(newTheme);\n      }\n    }, props), {}, {\n      \"aria-label\": \"toggle a light and dark color scheme\",\n      children: /*#__PURE__*/_jsxDEV(SunIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/Users/dinis/Desktop/dev/annna/components/ThemeToggle.tsx"],"names":["React","darkTheme","IconButton","Tooltip","useTheme","SunIcon","ThemeToggle","props","theme","setTheme","newTheme","document","querySelectorAll","forEach","iframe","contentDocument","documentElement","classList","toggle","className","style","setProperty"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,UAApB,EAAgCC,OAAhC,QAA+C,uBAA/C;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,OAAT,QAAwB,uBAAxB;AAEA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW;AACpC,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBL,QAAQ,EAApC;AAEA,sBACE,QAAC,OAAD;AAAS,IAAA,OAAO,EAAC,cAAjB;AAAgC,IAAA,IAAI,EAAC,QAArC;AAA8C,IAAA,KAAK,EAAC,KAApD;AAAA,2BACE,QAAC,UAAD;AACE,MAAA,OAAO,EAAC,OADV;AAEE,MAAA,OAAO,EAAE,MAAM;AACb,cAAMM,QAAQ,GAAGF,KAAK,KAAK,MAAV,GAAmB,OAAnB,GAA6B,MAA9C,CADa,CAGb;AACA;AACA;;AACAG,QAAAA,QAAQ,CAACC,gBAAT,CAA0B,oBAA1B,EAAgDC,OAAhD,CAAyDC,MAAD,IAA+B;AAAA;;AACrF,uCAAIA,MAAM,CAACC,eAAX,kDAAI,sBAAwBC,eAA5B,EAA6C;AAC3CF,YAAAA,MAAM,CAACC,eAAP,CAAuBC,eAAvB,CAAuCC,SAAvC,CAAiDC,MAAjD,CAAwDjB,SAAS,CAACkB,SAAlE;AACAL,YAAAA,MAAM,CAACC,eAAP,CAAuBC,eAAvB,CAAuCC,SAAvC,CAAiDC,MAAjD,CAAwD,aAAxD;AACAJ,YAAAA,MAAM,CAACC,eAAP,CAAuBC,eAAvB,CAAuCI,KAAvC,CAA6CC,WAA7C,CAAyD,cAAzD,EAAyEX,QAAzE;AACD;AACF,SAND;AAOAC,QAAAA,QAAQ,CAACK,eAAT,CAAyBC,SAAzB,CAAmCC,MAAnC,CAA0CjB,SAAS,CAACkB,SAApD;AACAR,QAAAA,QAAQ,CAACK,eAAT,CAAyBC,SAAzB,CAAmCC,MAAnC,CAA0C,aAA1C;AACAP,QAAAA,QAAQ,CAACK,eAAT,CAAyBI,KAAzB,CAA+BC,WAA/B,CAA2C,cAA3C,EAA2DX,QAA3D,EAfa,CAiBb;;AACAD,QAAAA,QAAQ,CAACC,QAAD,CAAR;AACD;AArBH,OAsBMH,KAtBN;AAuBE,oBAAW,sCAvBb;AAAA,6BAyBE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAzBF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CAlCM","sourcesContent":["import React from 'react';\nimport { darkTheme, IconButton, Tooltip } from '@modulz/design-system';\nimport { useTheme } from 'next-themes';\nimport { SunIcon } from '@radix-ui/react-icons';\n\nexport const ThemeToggle = (props) => {\n  const { theme, setTheme } = useTheme();\n\n  return (\n    <Tooltip content=\"Toggle theme\" side=\"bottom\" align=\"end\">\n      <IconButton\n        variant=\"ghost\"\n        onClick={() => {\n          const newTheme = theme === 'dark' ? 'light' : 'dark';\n\n          // When switching themes, you might see demo iframes lagging behind the primitives homepage for a few frames.\n          // This is because `setTheme` hook depends on React component lifecycle to update things. We are toggling\n          // styles manually so that the iframes and the parent page theme change is perfectly synced.\n          document.querySelectorAll('[data-demo-iframe]').forEach((iframe: HTMLIFrameElement) => {\n            if (iframe.contentDocument?.documentElement) {\n              iframe.contentDocument.documentElement.classList.toggle(darkTheme.className);\n              iframe.contentDocument.documentElement.classList.toggle('light-theme');\n              iframe.contentDocument.documentElement.style.setProperty('color-scheme', newTheme);\n            }\n          });\n          document.documentElement.classList.toggle(darkTheme.className);\n          document.documentElement.classList.toggle('light-theme');\n          document.documentElement.style.setProperty('color-scheme', newTheme);\n\n          // Finally, we still need to let `next-themes` know of the theme change so that it saves it to local storage.\n          setTheme(newTheme);\n        }}\n        {...props}\n        aria-label=\"toggle a light and dark color scheme\"\n      >\n        <SunIcon />\n      </IconButton>\n    </Tooltip>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}